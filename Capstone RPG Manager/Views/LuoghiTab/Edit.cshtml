@model Capstone_RPG_Manager.Models.LuoghiTab

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center my-5">Edit @Model.Nome</h2>

<div class="container d-flex flex-column align-items-center my-5">
    @using (Html.BeginForm("Edit", "LuoghiTab", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal d-flex flex-column">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group my-2">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-2">
            @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Descrizione, new { @class = "form-control", style = "max-width:-webkit-fill-available; width:100%" })
                @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-2">
            @Html.LabelFor(model => model.Immagine, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBox("Img", null, new { @class = "form-control", type = "file" })
                @Html.ValidationMessageFor(model => model.Immagine, "", new { @class = "text-danger" })
                <p class="text-danger">@ViewBag.ImgError</p>
            </div>
            @{
                if (Model.Immagine != null)
                {
                    <div>
                        <p class="mb-0">You can click on image to zoom</p>
                        <img src="~/Content/Images/DB/@Model.Immagine" style="width:50px;" />
                    </div>

                }
            }
        </div>

        <div class="form-group my-2">
            @Html.Label("If you want to create a City check the box", htmlAttributes: new { @class = "control-label" })
            <div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Citta, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group my-2">
            @Html.Label("Make your Area/City private?", htmlAttributes: new { @class = "control-label" })
            <div>
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Privata, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(model => model.Privata, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group my-3">
            <div>
                <input type="submit" value="Edit" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
    }
</div>

<script type="text/javascript">
    /*$(document).ready(function () { $("img").click(function () { this.requestFullscreen() }) });*/
    $(document).ready(function () {
        $("img").click(function () {
            if ($(this).css("width") == "50px") {
                $(this).animate({ width: "100%" }, 500);
            }
            else {
                $(this).animate({ width: "50px" }, 500);
            }
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
